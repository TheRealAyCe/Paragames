/*

Temple Run © 2013 by AyCe

done for the Secret Project

*/

class CTempleRun inherit CStaticCtrl

	var ^CButton		m_pxButtonQuit;
	var ^CGameScreen	m_pxScreen;
	var ^CDisplay		m_pxDisplay;
	var array ^CTREntity	m_apxEntities;
	var ^CTRPlayer		m_pxPlayer;
	
	export constructor()
		CTREntity.ms_pxInst = this;
		var ^CDesktop pxDesktop=CClientWrap.GetDesktop();	
		SetPos(0,0);

		var int iWidth = pxDesktop^.GetWidth();
		var int iHeight = pxDesktop^.GetHeight();

		SetSize(iWidth, iHeight);

		var int	iWRemaining = (iWidth-800)/2;
		var int	iHRemaining = (iHeight-730)/2;

		m_pxDisplay=new CDisplay(this);
		m_pxScreen=new CGameScreen(this);
		AddChild(m_pxScreen);
		m_pxScreen^.SetPos(iWRemaining, iHRemaining);
		m_pxScreen^.AddChild(m_pxDisplay);
		m_pxDisplay^.SetPos(30, 30);
		m_pxDisplay^.SetSize(740, 640);

		m_pxButtonQuit = new CButton();
		m_pxButtonQuit^.SetPos(iWRemaining+(800-250)/2, iHRemaining+700);
		m_pxButtonQuit^.SetSize(250, 30);
		m_pxButtonQuit^.SetText("Quit game");
		m_pxButtonQuit^.m_xOnClick=OnQuit;
		AddChild(m_pxButtonQuit);
	endconstructor;
	
	export destructor()
		Cleanup();
	enddestructor;

	proc void Cleanup()

	endproc;

	proc bool OnQuit()
		//Cleanup();
		CUIStateMgr.Get().SetState(CUIStateMgr.STATE_MAINMENU);
		return(true);
	endproc;

	proc bool OnTimer( int p_iID )
		return( true );
	endproc;

	class CGameScreen inherit CFrameWindow

		var ^CTempleRun		m_pxGame;

		export constructor(^CTempleRun p_pxGame)
			if(!InitFromResource("UI/Paragames/TempleRun","GameScreen")) then
				return;
			endif;
			m_pxGame = p_pxGame;
		endconstructor;

		export destructor()
			//KillStartScreen();
		enddestructor;
	endclass;

	class CDisplay inherit CAlphaMaskedStaticCtrl

		var ^CTempleRun		m_pxGame;

		export constructor(^CTempleRun p_pxGame)
			m_pxGame = p_pxGame;
			SetBackground(true);
			SetBackgroundColor({{255, 0, 0, 255}});
			//SetBitmap(CGameWrap.GetUrsRelPath() + "/Data/Base/UI/memory_logo.tga");
			SetBitmap(CGameInst.GetBitmapMgr().GetBlendBitmap("0 ,fill TeamCol 1 0 38 21")^.GetBitmap());
		endconstructor;

		export destructor()
			//KillStartScreen();
		enddestructor;
	endclass;

	// A temple run obj
	export class CTREntity
		export static var ^CTempleRun	ms_pxInst;
		export constructor()
			//
		endconstructor;

		export destructor()
			//
		enddestructor;

		export proc void OnDelete()
			
		endproc;
	endclass;

	// The temple run player
	export class CTRPlayer inherit CTREntity
		export constructor()
			//super();
		endconstructor;

		export destructor()
			//
		enddestructor;
	endclass;
endclass;
